'''
Even Fibonacci numbers
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting
with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
the sum of the even-valued terms.
'''

MAXIMUM = 4000000 # 4 million.

# Solution 1
if __name__ == '__main__':
    sum = 0
    a, b = 1, 2
    while a < MAXIMUM and b < MAXIMUM:
        if a % 2 == 0:
            sum += a
        if b % 2 == 0:
            sum += b
        a = a + b
        b = a + b

# Solution 2:
def fib():
    a, b = 1, 2
    while True:
        yield a
        a, b = b, a + b

if __name__ == '__main__':
    sum = 0
    for val in fib():
        if val >= MAXIMUM:
            break
        sum += val if val % 2 == 0 else 0

    print('The answer is {}'.format(sum))